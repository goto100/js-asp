<%@LANGUAGE="JAVASCRIPT" CODEPAGE="65001"%>
<%
function PNGSCode(width, height, depth) {
	var crcTable = getCrcTable();
	var chars = [];

	this.width = width || 0;
	this.height = height || 0;
	this.depth = depth || 0;

	function byte2(str) {
		return String.fromCharCode((str >> 8) & 0xFF, str & 0xFF);
	}

	function byte4(str) {
		String.fromCharCode((str >> 24) & 0xFF, (str >> 16) & 0xFF, (str >> 8) & 0xFF, str & 0xFF);
	}

	function getCrcTable(){
		var table = new Array(256);
		for(var c = 0, n = 0; n < 256; n++){
			c = n;
			for(var k = 0; k < 8; k++) {
				if (c & 1) c = 0xedb88320 ^ (c >>> 1);
				else c = c >>> 1;
			}
			table[n] = c;
		}
		return table;
	}
	
	function crc32(str){
		for (var c = 0xFFFFFFFF, n = 0; n < str.length; n++) c = crcTable[(c ^ str.charCodeAt(n)) & 0xFF] ^ (c >>> 8);
		return c ^ 0xFFFFFFFF;
	}

	function getChunk(type, content) {
		var ary = [];

		content = byte4(content.length) + type + content;
		content = content + byte4(crc32(type + content));
		for(i = 0; i < content.length; i++) ary.push(content.charCodeAt(i));
	
		return content;
	}

	this.addChar = function(name, code, width, height) {
		chars.push({name:		name,
								code:		code,
								width:	width,
								height:	height})
	}

	this.output = function() {
		Response.Expires = -9999;
		Response.AddHeader("pragma", "no-cache");
		Response.AddHeader("cache-ctrol", "no-cache");
		Response.ContentType = "image/png";
		
		var datas = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]; // Head
		
		for (var i = 0; i < datas.length; i += 2) {
			Response.BinaryWrite(String.fromCharCode(datas[i] + (datas[i + 1] << 8)));
		}
	}
}
var png = new PNGSCode(160, 40, 8);
png.addChar("0", "1110000111110111101111011110111101111011110111101111011110111101111011110111101111011110111110000111", 10, 10);
png.addChar("1", "1111011111110001111111110111111111011111111101111111110111111111011111111101111111110111111100000111", 10, 10);
png.addChar("2", "1110000111110111101111011110111111111011111111011111111011111111011111111011111111011110111100000011", 10, 10);
png.addChar("3", "1110000111110111101111011110111111110111111100111111111101111111111011110111101111011110111110000111", 10, 10);
png.addChar("4", "1111101111111110111111110011111110101111110110111111011011111100000011111110111111111011111111000011", 10, 10);
png.addChar("5", "1100000011110111111111011111111101000111110011101111111110111111111011110111101111011110111110000111", 10, 10);
png.addChar("6", "1111000111111011101111011111111101111111110100011111001110111101111011110111101111011110111110000111", 10, 10);
png.addChar("7", "1100000011110111011111011101111111101111111110111111110111111111011111111101111111110111111111011111", 10, 10);
png.addChar("8", "1110000111110111101111011110111101111011111000011111101101111101111011110111101111011110111110000111", 10, 10);
png.addChar("9", "1110001111110111011111011110111101111011110111001111100010111111111011111111101111011101111110001111", 10, 10);
png.addChar("A", "1111011111111101111111101011111110101111111010111111101011111100000111110111011111011101111000100011", 10, 10);
png.addChar("B", "1000000111110111101111011110111101110111110000111111011101111101111011110111101111011110111000000111", 10, 10);
png.addChar("C", "1110000011110111101110111110111011111111101111111110111111111011111111101111101111011101111110001111", 10, 10);
png.addChar("D", "0000001111110111011111011110111101111011110111101111011110111101111011110111101111011101110000001111", 10, 10);
png.addChar("E", "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011110111000000111", 10, 10);
png.addChar("F", "1000000111110111101111011011111101101111110000111111011011111101101111110111111111011111111000111111", 10, 10);
png.output();
%>